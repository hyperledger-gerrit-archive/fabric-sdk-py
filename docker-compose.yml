# This compose file will start a Hyperledger Fabric 1.0 MVE, including
# * ca
# * orderer
# * peer
# * sdk-py for testing

version: '2'

services:
  ca:
    container_name: fabric-ca
    image: hyperledger/fabric-ca
    ports:
      - "7054:7054"
    #command: fabric-ca server start -ca testdata/ec.pem -ca-key testdata/ec-key.pem -config testdata/testconfig.json
    command: bash -c "fabric-ca-server start -c ./testdata/testconfig.json"

  orderer:
    container_name: fabric-orderer
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_ORDERERTYPE=solo
      - ORDERER_GENERAL_LEDGERTYPE=ram
      - ORDERER_GENERAL_BATCHTIMEOUT=10s
      - ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT=10
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_RAMLEDGER_HISTORY_SIZE=100
    ports:
      - "7050:7050"
    #working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer

  peer:
    container_name: fabric-peer
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ID=peer0
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_NETWORKID=dev
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
    ports:
      - "7051:7051"
      - "7052:7052"
      - "7053:7053"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - orderer
      - ca
    command: peer node start

  sdk-py:
    container_name: fabric-sdk-py
    build: .
    image: hyperledger/fabric-sdk-py
    environment:
      - ORDERER_ADDR=orderer:7050
      - PEER_ADDR=peer:7051
      - CA_ADDR=ca:7054
    links:
      - orderer
      - peer
      - ca
    command: sh -c "while true; do sleep 1000; done"
    expose:
      - "80"
